"Директива, требующая аутентификации спец. ключом (токеном)"
directive @superuser on FIELD_DEFINITION

enum PonyRace {
  "Земная пони"
  Earth
  "Пегас"
  Pegasus
  "Единорог"
  Unicorn
  "Аликорн"
  Alicorn
}

"Пони"
type Pony {
  "Уникальный идентификатор (ID) пони"
  id: Int!
  "Имя пони"
  name: String!
  "Раса пони"
  race: PonyRace!
}

"Результат запроса health"
type Health {
  """
  Возвращает простую строку ("void") для проверки того, что сам сервис работает
  """
  empty: String

  """
  Медленный запрос, задерживает ответ на duration миллисекунд, а в percent случаях не ответит никогда
  """
  slow(
    "Длинна задержки в миллисекундах"
    duration: Int!,
    "Процент (0-100) запросов, когда сервис не ответит никогда"
    percent: Int!
  ): String
  "Запрос, имитирующий реальную работу (в первую очередь с базой данных)"
  realistic: String
  "Всегда завершается ошибкой, существует для проверки интеграции Sentry"
  fail(
    "Опциональное сообщение в ошибке"
    message: String
  ): String
}

type Query {
  "Получение пони по ID"
  pony(
    "Уникальный идентификатор (ID) пони"
    id: Int!
  ): Pony

  "Получение всех поней"
  ponies: [Pony]

  """
  Системные запросы для проверки состояния сервиса и тестирования производительности
  """
  health: Health
}

type Mutation {
  "Создание пони"
  createPony(
    "Имя пони"
    name: String!
    "Раса пони"
    race: PonyRace!
  ): Pony
}
